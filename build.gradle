apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'opensearch.opensearchplugin'
apply plugin: 'opensearch.yaml-rest-test'
apply plugin: 'opensearch.pluginzip'

def pluginName = 'Statistics'
def pluginDescription = 'Plugin for calculate statistics'
def projectPath = 'org.opensearch'
def pathToPlugin = 'rest.action'
def pluginClassName = 'StatisticsPlugin'
group = "Statistics"

tasks.register("preparePluginPathDirs") {
    mustRunAfter clean
    doLast {
        def newPath = pathToPlugin.replace(".", "/")
        mkdir "src/main/java/org/opensearch/$newPath"
        mkdir "src/test/java/org/opensearch/$newPath"
        mkdir "src/yamlRestTest/java/org/opensearch/$newPath"
    }
}

opensearchplugin {
    name pluginName
    description pluginDescription
    classname "${projectPath}.${pathToPlugin}.${pluginClassName}"
    licenseFile rootProject.file('LICENSE.txt')
    noticeFile rootProject.file('NOTICE.txt')
}

loggerUsageCheck.enabled = false

validateNebulaPom.enabled = false

tasks.named("dependencyLicenses") {
    enabled = false
}

tasks.named("licenseHeaders") {
    enabled = false
}

tasks.named("test") {
    enabled = false
}

tasks.named("testingConventions") {
    enabled = false
}

tasks.named("yamlRestTest") {
    enabled = false
}

buildscript {
    ext {
        opensearch_version = System.getProperty("opensearch.version", "2.16.0-SNAPSHOT")
    }

    repositories {
        mavenLocal()
        maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.opensearch.gradle:build-tools:${opensearch_version}"
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.9'
}

repositories {
    mavenLocal()
    maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

